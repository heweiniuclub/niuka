package com.niuka.o2o.controller.agent;


import com.niuka.agent.model.AgentRechargeLog;
import com.niuka.agent.rpc.AgentRechargeLogService;
import com.niuka.common.controller.BaseController;
import com.niuka.common.model.Pagination;
import com.niuka.common.model.Result;
import com.niuka.common.validator.Validator;
import com.niuka.common.validator.annotation.ValidateParam;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;

/**
 * 代理充值记录
 *
 * @author hewei
 *
 */
@Api(tags = "代理充值记录管理")
@Controller
@RequestMapping("/agent/rechargelog")
public class AgentRechargetLogController extends BaseController {

    @Resource
    private AgentRechargeLogService agentRechargeLogService;

    @ApiOperation("初始页")
    @RequestMapping(method = RequestMethod.GET)
    public String execute(Model model) {
        return "/agent/agent_recharge_log";
    }

    @ApiOperation("列表")
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public @ResponseBody
    Result list(
            @ApiParam(value = "开始时间", required = true) @ValidateParam({Validator.NOT_BLANK}) String startTime,
            @ApiParam(value = "结束时间", required = true) @ValidateParam({Validator.NOT_BLANK}) String endTime,
            @ApiParam(value = "代理商id", required = true) @ValidateParam({Validator.NOT_BLANK}) Integer agentId,
            @ApiParam(value = "开始页码", required = true) @ValidateParam({Validator.NOT_BLANK}) Integer pageNo,
            @ApiParam(value = "显示条数", required = true) @ValidateParam({Validator.NOT_BLANK}) Integer pageSize) {
        return Result.createSuccessResult().setData(agentRechargeLogService.findByTime(startTime,endTime,agentId,new Pagination<AgentRechargeLog>(pageNo, pageSize)));
    }

}