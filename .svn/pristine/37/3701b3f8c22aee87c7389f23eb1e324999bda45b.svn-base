<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niuka.agent.dao.AgentDao" >

  <resultMap id="BaseResultMap" type="com.niuka.agent.model.Agent" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="agent_name" property="agentName" jdbcType="VARCHAR" />
    <result column="agent_contacts_name" property="agentContactsName" jdbcType="VARCHAR" />
    <result column="agent_contacts_phone" property="agentContactsPhone" jdbcType="VARCHAR" />
    <result column="agent_total_amount" property="agentTotalAmount" jdbcType="DOUBLE" />
    <result column="agent_balance" property="agentBalance" jdbcType="DOUBLE" />
    <result column="agent_frozen_amount" property="agentFrozenAmount" jdbcType="DOUBLE" />
    <result column="agent_use_amount" property="agentUseAmount" jdbcType="DOUBLE" />
    <result column="prov_id" property="provId" jdbcType="INTEGER" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="area_id" property="areaId" jdbcType="INTEGER" />
    <result column="agent_address" property="agentAddress" jdbcType="VARCHAR" />
    <result column="isvalid" property="isvalid" jdbcType="BIT" />
    <result column="agent_level_id" property="agentLevelId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, createtime, modified_time, agent_name, agent_contacts_name, agent_contacts_phone, 
    agent_total_amount, agent_balance, agent_frozen_amount, agent_use_amount, prov_id, 
    city_id, area_id, agent_address, isvalid, agent_level_id, user_id
  </sql>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from agent
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.niuka.agent.model.Agent" >
    insert into agent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="agentName != null" >
        agent_name,
      </if>
      <if test="agentContactsName != null" >
        agent_contacts_name,
      </if>
      <if test="agentContactsPhone != null" >
        agent_contacts_phone,
      </if>
      <if test="agentTotalAmount != null" >
        agent_total_amount,
      </if>
      <if test="agentBalance != null" >
        agent_balance,
      </if>
      <if test="agentFrozenAmount != null" >
        agent_frozen_amount,
      </if>
      <if test="agentUseAmount != null" >
        agent_use_amount,
      </if>
      <if test="provId != null" >
        prov_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="areaId != null" >
        area_id,
      </if>
      <if test="agentAddress != null" >
        agent_address,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
      <if test="agentLevelId != null" >
        agent_level_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentName != null" >
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentContactsName != null" >
        #{agentContactsName,jdbcType=VARCHAR},
      </if>
      <if test="agentContactsPhone != null" >
        #{agentContactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="agentTotalAmount != null" >
        #{agentTotalAmount,jdbcType=DOUBLE},
      </if>
      <if test="agentBalance != null" >
        #{agentBalance,jdbcType=DOUBLE},
      </if>
      <if test="agentFrozenAmount != null" >
        #{agentFrozenAmount,jdbcType=DOUBLE},
      </if>
      <if test="agentUseAmount != null" >
        #{agentUseAmount,jdbcType=DOUBLE},
      </if>
      <if test="provId != null" >
        #{provId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="agentAddress != null" >
        #{agentAddress,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=BIT},
      </if>
      <if test="agentLevelId != null" >
        #{agentLevelId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.niuka.agent.model.Agent" >
    update agent
    <set >
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentName != null" >
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentContactsName != null" >
        agent_contacts_name = #{agentContactsName,jdbcType=VARCHAR},
      </if>
      <if test="agentContactsPhone != null" >
        agent_contacts_phone = #{agentContactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="agentTotalAmount != null" >
        agent_total_amount = #{agentTotalAmount,jdbcType=DOUBLE},
      </if>
      <if test="agentBalance != null" >
        agent_balance = #{agentBalance,jdbcType=DOUBLE},
      </if>
      <if test="agentFrozenAmount != null" >
        agent_frozen_amount = #{agentFrozenAmount,jdbcType=DOUBLE},
      </if>
      <if test="agentUseAmount != null" >
        agent_use_amount = #{agentUseAmount,jdbcType=DOUBLE},
      </if>
      <if test="provId != null" >
        prov_id = #{provId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="agentAddress != null" >
        agent_address = #{agentAddress,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=BIT},
      </if>
      <if test="agentLevelId != null" >
        agent_level_id = #{agentLevelId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <delete id="deleteById" parameterType="list" statementType="PREPARED">
    DELETE FROM agent
    <choose>
      <when test="list == null or list.size() == 0">
        WHERE 1 != 1
      </when>
      <when test="list.size() == 1">
        WHERE `id` =
        <foreach collection="list" item="id">#{id}</foreach>
      </when>
      <otherwise>
        WHERE `id` in
        <foreach collection="list" item="id" open="(" separator="," close=")">#{id}</foreach>
      </otherwise>
    </choose>
  </delete>

  <!-- 根据查询条件分页 -->
  <select id="findPaginationByParam" parameterType="com.niuka.agent.model.Agent" resultMap="BaseResultMap">
    SELECT *
    FROM agent a
    WHERE 1 = 1
    <if test="agentName != null and agentName != '' ">
      AND a.agent_name like CONCAT('%',#{agentName},'%')
    </if>
    <if test="agentContactsPhone != null and agentContactsPhone != '' ">
      AND a.agent_contacts_phone =  #{agentContactsPhone}
    </if>
    <if test="agentContactsName != null and agentContactsName != '' ">
      AND a.agent_contacts_name like CONCAT('%',#{agentContactsName},'%')
    </if>
    <if test="agentLevelId != null and agentLevelId != '' ">
      AND a.agent_level_id like CONCAT('%',#{agentLevelId},'%')
    </if>
    ORDER BY a.createtime DESC
  </select>

</mapper>