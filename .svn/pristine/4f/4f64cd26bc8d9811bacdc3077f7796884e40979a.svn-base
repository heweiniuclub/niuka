<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niuka.user.dao.api.OauthLoginMapper">
	
	<resultMap id="BaseResultMap" type="com.niuka.user.model.OauthLogin">
		<result column="id" property="id" jdbcType="INTEGER"/>
		<result column="oauth_name" property="oauthName" jdbcType="VARCHAR"/>
		<result column="oauth_id" property="oauthId" jdbcType="VARCHAR"/>
		<result column="oauth_access_token" property="oauthAccessToken" jdbcType="VARCHAR"/>
		<result column="oauth_expires" property="oauthExpires" jdbcType="INTEGER"/>
		<result column="user_id" property="userId" jdbcType="INTEGER"/>
		<result column="account" property="account" jdbcType="VARCHAR"/>
		<result column="customer_id" property="customerId" jdbcType="INTEGER"/>
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
	</resultMap>
  	
  	<sql id="Base_Column_List" >
    	id,oauth_name,oauth_id,oauth_access_token,oauth_expires,user_id,account,customer_id,createtime
    </sql>
    
    <select id="findOauthLoginByCustomerId" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from sys_oauth_login
		where 1 = 1
		<if test="customerId != null and customerId != '' ">
			AND customer_id = #{customerId}
		</if>
		<if test="oauthId != null and oauthId != '' ">
			AND oauth_id = #{oauthId}
		</if>
	</select>
	
	<!-- 根据oauth_id查询客户用户信息 -->
	<select id="queryUserByOauthId" resultMap="BaseResultMap" parameterType="Map">
		select
		  <include refid="Base_Column_List" />
		from sys_oauth_login
		where oauth_id = #{oauthId}
	</select>
	
	<!-- 保存第三方快捷登录信息 -->
	<insert id="insert" parameterType="OauthLogin" statementType="PREPARED" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO sys_oauth_login(
			oauth_name,
			oauth_id,
			user_id,
			account,
			customer_id,
			createtime
		) 
		VALUES (
			#{oauthName},
			#{oauthId},
			#{userId},
			#{account},
			#{customerId},
			#{createtime}
		)
	</insert>
</mapper>