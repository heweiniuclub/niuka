<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.niuka.agent.dao.AgentRechargeLogDao">
    <resultMap id="queryResultMap" type="com.niuka.agent.model.AgentRechargeLog">
        <!-- 流水号 -->
        <result column="id" property="id" jdbcType="INTEGER"/>
        <!-- 创建时间 -->
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
        <!-- 最后一次更新时间 -->
        <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP"/>
        <!-- 代理商ID -->
        <result column="agent_id" property="agentId" jdbcType="INTEGER"/>
        <!-- 充值金额 -->
        <result column="recharge_amount" property="rechargeAmount" jdbcType="DECIMAL"/>
        <!-- 充值类型(0普通充值 1代理资格充值) -->
        <result column="recharge_type" property="rechargeType" jdbcType="TINYINT"/>
        <!-- (1:支付宝，2：微信3.银行卡4线下支付) -->
        <result column="pay_type" property="payType" jdbcType="TINYINT"/>
        <!-- (0:未支付，1：已支付) -->
        <result column="status" property="status" jdbcType="TINYINT"/>
        <!-- 支付时间 -->
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP"/>
        <!-- 支付流水号 -->
        <result column="serial_number" property="serialNumber" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 保存,保存全部字段 -->
    <insert id="insert" parameterType="com.niuka.agent.model.AgentRechargeLog" keyProperty="id" keyColumn="id"
            useGeneratedKeys="true">INSERT INTO agent_recharge_log ( `createtime` , `modified_time` , `agent_id` , `recharge_amount` , `recharge_type` , `pay_type` , `status` , `pay_time` , `serial_number` ) VALUES ( #{createtime,jdbcType=TIMESTAMP} , #{modifiedTime,jdbcType=TIMESTAMP} , #{agentId,jdbcType=INTEGER} , #{rechargeAmount,jdbcType=DECIMAL} , #{rechargeType,jdbcType=TINYINT} , #{payType,jdbcType=TINYINT} , #{status,jdbcType=TINYINT} , #{payTime,jdbcType=TIMESTAMP} , #{serialNumber,jdbcType=VARCHAR} )</insert>

    <!-- 根据主键获取单条记录 -->
    <select id="get" resultMap="queryResultMap"
            parameterType="com.niuka.agent.model.AgentRechargeLog">
        SELECT t.id , t.createtime , t.modified_time , t.agent_id , t.recharge_amount , t.recharge_type ,
         t.pay_type , t.status , t.pay_time , t.serial_number FROM agent_recharge_log t
         WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <!-- 更新,更新全部字段 -->
    <update id="update" parameterType="com.niuka.agent.model.AgentRechargeLog">UPDATE agent_recharge_log
        <set>createtime=#{createtime,jdbcType=TIMESTAMP}, modified_time=#{modifiedTime,jdbcType=TIMESTAMP},
            agent_id=#{agentId,jdbcType=INTEGER}, recharge_amount=#{rechargeAmount,jdbcType=DECIMAL},
            recharge_type=#{rechargeType,jdbcType=TINYINT}, pay_type=#{payType,jdbcType=TINYINT},
            status=#{status,jdbcType=TINYINT}, pay_time=#{payTime,jdbcType=TIMESTAMP},
            serial_number=#{serialNumber,jdbcType=VARCHAR},
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
    </update>


    <delete id="deleteById" parameterType="list" statementType="PREPARED">
        DELETE FROM agent_recharge_log
        <choose>
            <when test="list == null or list.size() == 0">WHERE 1 != 1</when>
            <when test="list.size() == 1">WHERE `id` =
                <foreach collection="list" item="id">#{id}</foreach>
            </when>
            <otherwise>WHERE `id` in
                <foreach collection="list" item="id" open="(" separator="," close=")">#{id}</foreach>
            </otherwise>
        </choose>
    </delete>

    <!-- 根据条件查询-->
    <select id="findByTime" resultMap="queryResultMap" parameterType="Map">
     SELECT t.id , t.createtime , t.modified_time , t.agent_id , t.recharge_amount , t.recharge_type ,
         t.pay_type , t.status , t.pay_time , t.serial_number FROM agent_recharge_log t where 1=1
        <if test="startDate != null and startDate != ''">
            AND a.createtime &gt; #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND a.createtime &lt; #{endDate}
        </if>
        AND t.agent_id = #{agentId}
    </select>


</mapper>
