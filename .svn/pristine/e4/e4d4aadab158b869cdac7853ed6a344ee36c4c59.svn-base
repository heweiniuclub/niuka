package com.niuka.o2o.controller;

import javax.servlet.http.HttpServletRequest;

import com.niuka.common.model.Result;
import com.niuka.user.client.ApplicationPermissionUtils;
import io.swagger.annotations.ApiOperation;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.niuka.user.client.SessionPermission;
import com.niuka.user.client.SessionUser;
import com.niuka.user.client.SessionUtils;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * @author hewei
 */
@Controller
@RequestMapping("/index")
public class IndexController {

	/**
	 *
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping(method = RequestMethod.GET)
	public String execute(HttpServletRequest request, Model model) {
		SessionUser sessionUser = SessionUtils.getSessionUser(request);
		// 设置登录用户名
		model.addAttribute("userName", sessionUser.getAccount());
		SessionPermission sessionPermission = SessionUtils.getSessionPermission(request);
		// 设置当前登录用户没有的权限，以便控制前台按钮的显示或者隐藏
		model.addAttribute("sessionUserNoPermissions",
				sessionPermission == null ? null : sessionPermission.getNoPermissions());
		return "/index";
	}


	@ApiOperation("菜单")
	@RequestMapping(value = "/menu", method = RequestMethod.GET)
	public @ResponseBody
	Result menu(HttpServletRequest request,Model model) {
		SessionPermission sessionPermission = SessionUtils.getSessionPermission(request);

		SessionUser sessionUser = SessionUtils.getSessionUser(request);
		model.addAttribute("userName", sessionUser.getAccount());

		// 如果配置的权限拦截器，则获取登录用户权限下的菜单，没有权限拦截限制的情况下，获取当前系统菜单呈现
		return Result.createSuccessResult().setData(
				sessionPermission == null ? ApplicationPermissionUtils.getApplicationMenuList() :  sessionPermission.getMenuList());
	}
}
