package com.niuka.o2o.controller.agent;

import com.niuka.agent.model.AgentLevel;
import com.niuka.agent.rpc.AgentLevelService;
import com.niuka.common.controller.BaseController;
import com.niuka.common.model.Pagination;
import com.niuka.common.model.Result;
import com.niuka.common.validator.Validator;
import com.niuka.common.validator.annotation.ValidateParam;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.Date;


/**
 * 代理商级别管理
 * @author hewei
 */
@Api(tags = "代理商级别管理")
@Controller
@RequestMapping("/agent/level")
public class AgentLevelController extends BaseController {

	@Resource
	private AgentLevelService agentlevelservice;

	@ApiOperation("初始页")
	@RequestMapping(method = RequestMethod.GET)
	public String execute() {
		return "/agent/agent_level";
	}

	@ApiOperation("新增/修改页")
	@RequestMapping(value = "/edit", method = RequestMethod.GET)
	public String edit(@ApiParam(value = "id") Integer id, Model model) {
		AgentLevel agentLevel;
		if (id == null) {
			agentLevel = new AgentLevel();
		}
		else {
			agentLevel = agentlevelservice.get(id);
		}
		model.addAttribute("agentLevel", agentLevel);
		return "/agent/agent_level_edit";
	}

	@ApiOperation("列表")
	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public @ResponseBody
	Result list(
			@ApiParam(value = "名称 ") String name,
			@ApiParam(value = "开始页码", required = true) @ValidateParam({ Validator.NOT_BLANK }) Integer pageNo,
			@ApiParam(value = "显示条数", required = true) @ValidateParam({ Validator.NOT_BLANK }) Integer pageSize) {
		return Result.createSuccessResult().setData(agentlevelservice.findPaginationByName(name, new Pagination<AgentLevel>(pageNo, pageSize)));
	}

	@ApiOperation("新增/修改提交")
	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public @ResponseBody Result save(
			@ApiParam(value = "id") Integer id,
			@ApiParam(value = "代理商级别名称", required = true) @ValidateParam({ Validator.NOT_BLANK }) String agentLevelName,
			@ApiParam(value = "代理商折扣", required = true) @ValidateParam({ Validator.NOT_BLANK }) Double agentLevelDiscount,
			@ApiParam(value = "需要缴纳的金额", required = true) @ValidateParam({ Validator.NOT_BLANK }) Double amount,
			@ApiParam(value = "备注")  String remarks,
			@ApiParam(value = "排序", required = true) @ValidateParam({ Validator.NOT_BLANK, Validator.INT }) Integer sort) {
		AgentLevel agentLevel;
		if (id == null) {
			agentLevel = new AgentLevel();
			agentLevel.setCreatetime(new Date());
		}
		else {
			agentLevel = agentlevelservice.get(id);
			agentLevel.setModifiedTime(new Date());
		}
		agentLevel.setAgentLevelName(agentLevelName);
		agentLevel.setAgentLevelDiscount(agentLevelDiscount);
		agentLevel.setAmount(amount);
		agentLevel.setRemarks(remarks);
		agentLevel.setSort(sort);
		agentlevelservice.save(agentLevel);
		return Result.createSuccessResult();
	}

	@ApiOperation("删除")
	@RequestMapping(value = "/delete", method = RequestMethod.POST)
	public @ResponseBody Result delete(
			@ApiParam(value = "ids", required = true) @ValidateParam({ Validator.NOT_BLANK }) String ids) {
		agentlevelservice.deleteById(getAjaxIds(ids));
		return Result.createSuccessResult();
	}
}